/* eslint-disable */

(function (e, t) {
  'use strict';
  var i,
    s = (function () {
      var t = e.createElement('dummy').style,
        s = ['Webkit', 'Moz', 'O', 'ms', 'Khtml'],
        n = {};
      return function (e) {
        if ('undefined' == typeof n[e]) {
          var r = e.charAt(0).toUpperCase() + e.substr(1),
            a = (e + ' ' + s.join(r + ' ') + r).split(' ');
          for (var o in ((n[e] = null), a))
            if (void 0 !== t[a[o]]) {
              n[e] = a[o];
              break;
            }
        }
        return n[e];
      };
    })(),
    n = function (e, t) {
      var s = 'xyz',
        n = '';
      if ('string' == typeof e)
        for (var r in e.split(''))
          0 <= s.indexOf(e[r]) && ((n += e[r]), (s = s.split(e[r]).join('')));
      return n ? n : void 0 === t ? 'xyz' : t;
    },
    r = function (e, t) {
      var i, n;
      for (i in t)
        t.hasOwnProperty(i) && ((n = s(i)), null !== n && (e.style[n] = t[i]));
      return e;
    },
    a = function (e) {
      return ' translate3d(' + e.x + 'px,' + e.y + 'px,' + e.z + 'px) ';
    },
    o = function (e, t) {
      var s = e.order ? e.order : 'xyz',
        n = '',
        r = s.split('');
      t && (r = r.reverse());
      for (var a = 0; a < r.length; a++)
        n += ' rotate' + r[a].toUpperCase() + '(' + e[r[a]] + 'deg)';
      return n;
    },
    l = function (e) {
      return ' scale(' + e + ') ';
    },
    d = function (e) {
      var i = t.innerHeight / e.height,
        s = t.innerWidth / e.width,
        n = i > s ? s : i;
      return (
        e.maxScale && n > e.maxScale && (n = e.maxScale),
        e.minScale && n < e.minScale && (n = e.minScale),
        n
      );
    },
    p = e.body,
    m = null !== s('perspective') && p.classList && p.dataset;
  m || (p.className += ' impress-not-supported ');
  var u = {},
    c = [],
    g = [],
    v = {
      width: 1024,
      height: 768,
      maxScale: 1,
      minScale: 0,
      perspective: 1e3,
      transitionDuration: 1e3,
    },
    y = function () {
      return !1;
    },
    h = (t.impress = function (s) {
      if (!m)
        return {
          init: y,
          goto: y,
          prev: y,
          next: y,
          swipe: y,
          tear: y,
          lib: {},
        };
      if (((s = s || 'impress'), u['impress-root-' + s]))
        return u['impress-root-' + s];
      (i = L(s)),
        p.classList.remove('impress-not-supported'),
        p.classList.add('impress-supported');
      var c = {},
        g = null,
        h = null,
        b = null,
        f = null,
        w = null,
        S = i.util.byId(s),
        C = e.createElement('div'),
        I = !1,
        k = null,
        N = function (e) {
          k !== e && (i.util.triggerEvent(e, 'impress:stepenter'), (k = e)),
            i.util.triggerEvent(e, 'impress:steprefresh');
        },
        A = function (e, t) {
          k === e &&
            (i.util.triggerEvent(e, 'impress:stepleave', { next: t }),
            (k = null));
        },
        D = function (e, t) {
          var s = e.dataset,
            d = {
              translate: {
                x: i.util.toNumber(s.x),
                y: i.util.toNumber(s.y),
                z: i.util.toNumber(s.z),
              },
              rotate: {
                x: i.util.toNumber(s.rotateX),
                y: i.util.toNumber(s.rotateY),
                z: i.util.toNumber(s.rotateZ || s.rotate),
                order: n(s.rotateOrder),
              },
              scale: i.util.toNumber(s.scale, 1),
              transitionDuration: i.util.toNumber(
                s.transitionDuration,
                f.transitionDuration
              ),
              el: e,
            };
          e.id || (e.id = 'step-' + (t + 1)),
            (c['impress-' + e.id] = d),
            r(e, {
              position: 'absolute',
              transform:
                'translate(0, 0)' + a(d.translate) + o(d.rotate) + l(d.scale),
              transformStyle: 'preserve-3d',
            });
        },
        z = function () {
          (b = i.util.$$('.step', S)), b.forEach(D);
        },
        T = function () {
          if (!I) {
            E(S);
            var t =
              i.util.$("meta[name='viewport']") || e.createElement('meta');
            (t.content =
              'width=device-width, minimum-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover'),
              t.parentNode !== e.head &&
                ((t.name = 'viewport'), e.head.appendChild(t));
            var n = S.dataset;
            (f = {
              width: i.util.toNumber(n.width, v.width),
              height: i.util.toNumber(n.height, v.height),
              maxScale: i.util.toNumber(n.maxScale, v.maxScale),
              minScale: i.util.toNumber(n.minScale, v.minScale),
              perspective: i.util.toNumber(n.perspective, v.perspective),
              transitionDuration: i.util.toNumber(
                n.transitionDuration,
                v.transitionDuration
              ),
            }),
              (w = d(f)),
              i.util.arrayify(S.childNodes).forEach(function (e) {
                C.appendChild(e);
              }),
              S.appendChild(C),
              (e.documentElement.style.height = '100%'),
              r(p, { height: '100%', overflow: 'hidden' });
            var a = {
              position: 'absolute',
              transformOrigin: 'top left',
              transition: 'all 0s ease-in-out',
              transformStyle: 'preserve-3d',
            };
            r(S, a),
              r(S, {
                top: '50%',
                left: '50%',
                perspective: f.perspective / w + 'px',
                transform: l(w),
              }),
              r(C, a),
              p.classList.remove('impress-disabled'),
              p.classList.add('impress-enabled'),
              z(),
              (h = {
                translate: { x: 0, y: 0, z: 0 },
                rotate: { x: 0, y: 0, z: 0, order: 'xyz' },
                scale: 1,
              }),
              (I = !0),
              i.util.triggerEvent(S, 'impress:init', {
                api: u['impress-root-' + s],
              });
          }
        },
        P = function (e) {
          return (
            'number' == typeof e
              ? (e = 0 > e ? b[b.length + e] : b[e])
              : 'string' == typeof e && (e = i.util.byId(e)),
            e && e.id && c['impress-' + e.id] ? e : null
          );
        },
        B = null,
        H = function (e, s, n, m) {
          if (((n = n || 'goto'), (m = m || null), !I)) return !1;
          if ((z(), !(e = P(e)))) return !1;
          t.scrollTo(0, 0);
          var u = c['impress-' + e.id];
          if (((s = void 0 === s ? u.transitionDuration : s), g && g !== e)) {
            var v = { target: g, detail: {} };
            if (
              ((v.detail.next = e),
              (v.detail.transitionDuration = s),
              (v.detail.reason = n),
              m && (v.origEvent = m),
              !1 === x(v))
            )
              return !1;
            (e = v.detail.next),
              (u = c['impress-' + e.id]),
              (s = v.detail.transitionDuration);
          }
          g &&
            (g.classList.remove('active'),
            p.classList.remove('impress-on-' + g.id)),
            e.classList.add('active'),
            p.classList.add('impress-on-' + e.id);
          var y = {
              rotate: {
                x: -u.rotate.x,
                y: -u.rotate.y,
                z: -u.rotate.z,
                order: u.rotate.order,
              },
              translate: {
                x: -u.translate.x,
                y: -u.translate.y,
                z: -u.translate.z,
              },
              scale: 1 / u.scale,
            },
            b = y.scale >= h.scale;
          s = i.util.toNumber(s, f.transitionDuration);
          var L = s / 2;
          e === g && (w = d(f));
          var E = y.scale * w;
          return (
            g && g !== e && A(g, e),
            r(S, {
              perspective: f.perspective / E + 'px',
              transform: l(E),
              transitionDuration: s + 'ms',
              transitionDelay: (b ? L : 0) + 'ms',
            }),
            r(C, {
              transform: o(y.rotate, !0) + a(y.translate),
              transitionDuration: s + 'ms',
              transitionDelay: (b ? 0 : L) + 'ms',
            }),
            (h.scale === y.scale ||
              (h.rotate.x === y.rotate.x &&
                h.rotate.y === y.rotate.y &&
                h.rotate.z === y.rotate.z &&
                h.translate.x === y.translate.x &&
                h.translate.y === y.translate.y &&
                h.translate.z === y.translate.z)) &&
              (L = 0),
            (h = y),
            (g = e),
            t.clearTimeout(B),
            (B = t.setTimeout(function () {
              N(g);
            }, s + L)),
            e
          );
        },
        M = function (e) {
          var t = b.indexOf(g) - 1;
          return (t = 0 <= t ? b[t] : b[b.length - 1]), H(t, void 0, 'prev', e);
        },
        q = function (e) {
          var t = b.indexOf(g) + 1;
          return (t = t < b.length ? b[t] : b[0]), H(t, void 0, 'next', e);
        },
        O = function (e, t, i) {
          return e + (t - e) * i;
        },
        V = function (e) {
          if (!(1 < Math.abs(e))) {
            var t = { target: g, detail: {} };
            (t.detail.swipe = e),
              (t.detail.transitionDuration = f.transitionDuration);
            var i;
            if (0 > e)
              (i = b.indexOf(g) + 1),
                (t.detail.next = i < b.length ? b[i] : b[0]),
                (t.detail.reason = 'next');
            else if (0 < e)
              (i = b.indexOf(g) - 1),
                (t.detail.next = 0 <= i ? b[i] : b[b.length - 1]),
                (t.detail.reason = 'prev');
            else return;
            if (!1 === x(t)) return !1;
            var s = t.detail.next,
              n = c['impress-' + s.id],
              d = n.scale * w,
              p = Math.abs(e),
              m = {
                translate: {
                  x: O(h.translate.x, -n.translate.x, p),
                  y: O(h.translate.y, -n.translate.y, p),
                  z: O(h.translate.z, -n.translate.z, p),
                },
                rotate: {
                  x: O(h.rotate.x, -n.rotate.x, p),
                  y: O(h.rotate.y, -n.rotate.y, p),
                  z: O(h.rotate.z, -n.rotate.z, p),
                  order: 0.7 > p ? h.rotate.order : n.rotate.order,
                },
                scale: O(h.scale * w, d, p),
              };
            r(S, {
              perspective: f.perspective / m.scale + 'px',
              transform: l(m.scale),
              transitionDuration: '0ms',
              transitionDelay: '0ms',
            }),
              r(C, {
                transform: o(m.rotate, !0) + a(m.translate),
                transitionDuration: '0ms',
                transitionDelay: '0ms',
              });
          }
        },
        K = function () {
          i.gc.teardown(), delete u['impress-root-' + s];
        };
      return (
        i.gc.addEventListener(
          S,
          'impress:init',
          function () {
            b.forEach(function (e) {
              e.classList.add('future');
            }),
              i.gc.addEventListener(
                S,
                'impress:stepenter',
                function (e) {
                  e.target.classList.remove('past'),
                    e.target.classList.remove('future'),
                    e.target.classList.add('present');
                },
                !1
              ),
              i.gc.addEventListener(
                S,
                'impress:stepleave',
                function (e) {
                  e.target.classList.remove('present'),
                    e.target.classList.add('past');
                },
                !1
              );
          },
          !1
        ),
        i.gc.addEventListener(
          S,
          'impress:init',
          function () {
            var e = '';
            i.gc.addEventListener(
              S,
              'impress:stepenter',
              function (i) {
                t.location.hash = e = '#/' + i.target.id;
              },
              !1
            ),
              i.gc.addEventListener(
                t,
                'hashchange',
                function () {
                  t.location.hash !== e && H(i.util.getElementFromHash());
                },
                !1
              ),
              H(i.util.getElementFromHash() || b[0], 0);
          },
          !1
        ),
        p.classList.add('impress-disabled'),
        (u['impress-root-' + s] = {
          init: T,
          goto: H,
          next: q,
          prev: M,
          swipe: V,
          tear: K,
          lib: i,
        })
      );
    });
  h.supported = m;
  var b = {};
  h.addLibraryFactory = function (e) {
    for (var t in e) e.hasOwnProperty(t) && (b[t] = e[t]);
  };
  var L = function (e) {
    var t = {};
    for (var i in b)
      if (b.hasOwnProperty(i)) {
        if (t[i] !== void 0)
          throw (
            'impress.js ERROR: Two libraries both tried to use libname: ' + i
          );
        t[i] = b[i](e);
      }
    return t;
  };
  h.addPreInitPlugin = function (e, t) {
    if (((t = parseInt(t) || 10), 0 >= t))
      throw 'addPreInitPlugin: weight must be a positive integer';
    void 0 === c[t] && (c[t] = []), c[t].push(e);
  };
  var E = function (e) {
    for (var t, s = 0; s < c.length; s++)
      if (((t = c[s]), void 0 !== t))
        for (var n = 0; n < t.length; n++) t[n](e);
  };
  h.addPreStepLeavePlugin = function (e, t) {
    if (((t = parseInt(t) || 10), 0 >= t))
      throw 'addPreStepLeavePlugin: weight must be a positive integer';
    void 0 === g[t] && (g[t] = []), g[t].push(e);
  };
  var x = function (e) {
    for (var t, s = 0; s < g.length; s++)
      if (((t = g[s]), void 0 !== t))
        for (var n = 0; n < t.length; n++) if (!1 === t[n](e)) return !1;
  };
})(document, window),
  (function (e, t) {
    'use strict';
    var s = [],
      n = 0,
      r = { roots: [] },
      a = function (e) {
        if (s[e]) return s[e];
        var t = [],
          r = [],
          a = [];
        o(e);
        var d = function (e) {
            t.push(e);
          },
          p = function (e, t, i) {
            r.push({ target: e, type: t, listener: i });
          },
          m = function (e) {
            a.push(e);
          };
        m(function (e) {
          l(e);
        });
        var u = function () {
            var s;
            for (s = a.length - 1; 0 <= s; s--) a[s](e);
            for (a = [], s = 0; s < t.length; s++)
              t[s].parentElement.removeChild(t[s]);
            for (t = [], s = 0; s < r.length; s++) {
              var n = r[s].target,
                o = r[s].type,
                l = r[s].listener;
              n.removeEventListener(o, l);
            }
          },
          c = {
            pushElement: d,
            appendChild: function (e, t) {
              e.appendChild(t), d(t);
            },
            pushEventListener: p,
            addEventListener: function (e, t, i) {
              e.addEventListener(t, i), p(e, t, i);
            },
            pushCallback: m,
            teardown: u,
          };
        return (s[e] = c), n++, c;
      };
    t.impress.addLibraryFactory({ gc: a });
    var o = function (t) {
        (r.roots[t] = {}), (r.roots[t].steps = []);
        for (
          var s, a = e.getElementById(t).querySelectorAll('.step'), o = 0;
          o < a.length;
          o++
        )
          (s = a[o]),
            r.roots[t].steps.push({ el: s, id: s.getAttribute('id') });
        if (0 === n) {
          (r.body = {}),
            (r.body.impressNotSupported = !!e.body.classList.contains(
              'impress-not-supported'
            ));
          var l = e.head.querySelectorAll('meta');
          for (o = 0; o < l.length; o++) {
            var d = l[o];
            'viewport' === d.name && (r.meta = d.content);
          }
        }
      },
      l = function (t) {
        e.body.classList.remove('impress-enabled'),
          e.body.classList.remove('impress-disabled');
        var a = e.getElementById(t),
          o = a.querySelector('.active').id;
        e.body.classList.remove('impress-on-' + o),
          (e.documentElement.style.height = ''),
          (e.body.style.height = ''),
          (e.body.style.overflow = '');
        for (var l = a.querySelectorAll('.step'), d = 0; d < l.length; d++)
          l[d].classList.remove('future'),
            l[d].classList.remove('past'),
            l[d].classList.remove('present'),
            l[d].classList.remove('active'),
            (l[d].style.position = ''),
            (l[d].style.transform = ''),
            (l[d].style['transform-style'] = '');
        (a.style.position = ''),
          (a.style['transform-origin'] = ''),
          (a.style.transition = ''),
          (a.style['transform-style'] = ''),
          (a.style.top = ''),
          (a.style.left = ''),
          (a.style.transform = ''),
          (l = r.roots[t].steps);
        for (var p; (p = l.pop()); )
          null === p.id
            ? p.el.removeAttribute('id')
            : p.el.setAttribute('id', p.id);
        delete r.roots[t];
        var u = a.firstChild,
          c = u.innerHTML;
        if (
          ((a.innerHTML = c), void 0 !== s[t] && (delete s[t], n--), 0 === n)
        ) {
          e.body.classList.remove('impress-supported'),
            r.body.impressNotSupported &&
              e.body.classList.add('impress-not-supported');
          var g = e.head.querySelectorAll('meta');
          for (d = 0; d < g.length; d++) {
            var v = g[d];
            'viewport' === v.name &&
              (void 0 === r.meta
                ? v.parentElement.removeChild(v)
                : (v.content = r.meta));
          }
        }
      };
  })(document, window),
  (function (e, t) {
    'use strict';
    var i = [];
    t.impress.addLibraryFactory({
      util: function (s) {
        if (i[s]) return i[s];
        var n = function (e) {
            return [].slice.call(e);
          },
          r = function (t) {
            return e.getElementById(t);
          },
          a = {
            $: function (t, i) {
              return (i = i || e), i.querySelector(t);
            },
            $$: function (t, i) {
              return (i = i || e), n(i.querySelectorAll(t));
            },
            arrayify: n,
            byId: r,
            getElementFromHash: function () {
              var e = t.location.hash.replace(/^#\/?/, '');
              return r(decodeURIComponent(e));
            },
            throttle: function (e, i) {
              var s = null;
              return function () {
                var n = this,
                  r = arguments;
                t.clearTimeout(s),
                  (s = t.setTimeout(function () {
                    e.apply(n, r);
                  }, i));
              };
            },
            toNumber: function (e, t) {
              return isNaN(e) ? t || 0 : +e;
            },
            triggerEvent: function (t, i, s) {
              var n = e.createEvent('CustomEvent');
              n.initCustomEvent(i, !0, !0, s), t.dispatchEvent(n);
            },
            getUrlParamValue: function (e) {
              var i = t.location.search.split(e + '=')[1],
                s = i && i.split('&')[0];
              if ('' !== s) return s;
            },
          };
        return (i[s] = a), a;
      },
    });
  })(document, window),
  (function (e) {
    'use strict';
    var t,
      i = 0,
      s = 0,
      n = null,
      r = null,
      a = null;
    e.addEventListener(
      'impress:init',
      function (s) {
        (t = s.detail.api.lib.util), (n = s.detail.api), (a = s.target);
        var o = a.dataset,
          l = t.getUrlParamValue('impress-autoplay') || o.autoplay;
        l && (i = t.toNumber(l, 0));
        var d = e.querySelector('#impress-toolbar');
        d && v(d),
          n.lib.gc.pushCallback(function () {
            clearTimeout(r);
          });
      },
      !1
    ),
      e.addEventListener(
        'impress:autoplay:pause',
        function (e) {
          (d = 'paused'), o(e);
        },
        !1
      ),
      e.addEventListener(
        'impress:autoplay:play',
        function (e) {
          (d = 'playing'), o(e);
        },
        !1
      );
    var o = function (e) {
      var n = e.target;
      (s = t.toNumber(n.dataset.autoplay, i)), 'paused' === d ? l(0) : l(s);
    };
    e.addEventListener(
      'impress:stepenter',
      function (e) {
        o(e);
      },
      !1
    ),
      e.addEventListener(
        'impress:substep:enter',
        function (e) {
          o(e);
        },
        !1
      );
    var l = function (e) {
        r && clearTimeout(r),
          0 < e &&
            (r = setTimeout(function () {
              n.next();
            }, 1e3 * e)),
          g();
      },
      d = 'not clicked',
      p = null,
      m = function (t) {
        var i = e.createElement('div');
        return (i.innerHTML = t), i.firstChild;
      },
      u = function () {
        d = 0 < s && 'paused' !== d ? 'paused' : 'playing';
      },
      c = function () {
        return 0 < s && 'paused' !== d ? '||' : '&#9654;';
      },
      g = function () {
        if (p) {
          var e = p.offsetWidth,
            t = p.offsetHeight;
          (p.innerHTML = c()),
            p.style.width || (p.style.width = e + 'px'),
            p.style.height || (p.style.height = t + 'px');
        }
      },
      v = function (e) {
        var n =
          '<button id="impress-autoplay-playpause" title="Autoplay" class="impress-autoplay">' +
          c() +
          '</button>';
        (p = m(n)),
          p.addEventListener('click', function () {
            u(),
              'playing' === d
                ? (0 === i && (i = 7), 0 === s && (s = i), l(s))
                : 'paused' === d && l(0);
          }),
          t.triggerEvent(e, 'impress:toolbar:appendChild', {
            group: 10,
            element: p,
          });
      };
  })(document),
  (function (e) {
    'use strict';
    var t = null,
      i = !1,
      s = null,
      n = null,
      r = function (e, t) {
        var i, s;
        for (i in t)
          t.hasOwnProperty(i) &&
            ((s = a(i)), null !== s && (e.style[s] = t[i]));
        return e;
      },
      a = (function () {
        var t = e.createElement('dummy').style,
          s = ['Webkit', 'Moz', 'O', 'ms', 'Khtml'],
          n = {};
        return function (e) {
          if ('undefined' == typeof n[e]) {
            var r = e.charAt(0).toUpperCase() + e.substr(1),
              a = (e + ' ' + s.join(r + ' ') + r).split(' ');
            for (var o in ((n[e] = null), a))
              if (void 0 !== t[a[o]]) {
                n[e] = a[o];
                break;
              }
          }
          return n[e];
        };
      })(),
      o = function () {
        i &&
          (r(t, { display: 'block' }),
          (i = !1),
          s.triggerEvent(n, 'impress:autoplay:play', {}));
      };
    e.addEventListener(
      'impress:stepleave',
      function () {
        o();
      },
      !1
    );
  })(document),
  (function (e, t) {
    'use strict';
    impress.addPreInitPlugin(function () {
      if (t.markdown)
        for (
          var s = e.querySelectorAll('.markdown'), n = 0;
          n < s.length;
          n++
        ) {
          var r = s[n],
            a = r.dataset.markdownDialect,
            o = r.textContent.split(/^-----$/m),
            l = o.length - 1;
          r.innerHTML = markdown.toHTML(o[l], a);
          var d = null;
          for (r.id && ((d = r.id), (r.id = '')), l--; 0 <= l; ) {
            var p = r.cloneNode(!1);
            (p.innerHTML = markdown.toHTML(o[l], a)),
              r.parentNode.insertBefore(p, r),
              (r = p),
              l--;
          }
          null !== d && (r.id = d);
        }
      t.hljs && hljs.initHighlightingOnLoad(),
        t.mermaid && mermaid.initialize({ startOnLoad: !0 });
    }, 1);
  })(document, window),
  (function (t) {
    'use strict';
    var s, n;
    t.addEventListener(
      'impress:init',
      function (r) {
        (s = r.target), (n = r.detail.api);
        var a = n.lib.gc,
          o = ['input', 'textarea', 'select', '[contenteditable=true]'];
        for (var l of o) {
          var d = t.querySelectorAll(l);
          if (d)
            for (var p, m = 0; m < d.length; m++)
              (p = d[m]),
                a.addEventListener(p, 'keydown', function (e) {
                  e.stopPropagation();
                }),
                a.addEventListener(p, 'keyup', function (e) {
                  e.stopPropagation();
                });
        }
      },
      !1
    ),
      t.addEventListener(
        'impress:stepleave',
        function () {
          t.activeElement.blur();
        },
        !1
      );
  })(document),
  (function (e, t) {
    'use strict';
    var i;
    e.addEventListener(
      'impress:init',
      function (e) {
        i = e.detail.api.lib;
      },
      !1
    );
    var s = function (e) {
        return !isNaN(e);
      },
      n = function (n) {
        if (n && n.target) {
          var r = n.target.dataset,
            a = e.querySelectorAll('.step');
          if (
            void 0 !== r.gotoKeyList &&
            void 0 !== r.gotoNextList &&
            void 0 !== n.origEvent &&
            void 0 !== n.origEvent.key
          ) {
            var o = r.gotoKeyList.split(' '),
              l = r.gotoNextList.split(' ');
            if (o.length !== l.length)
              t.console.log(
                "impress goto plugin: data-goto-key-list and data-goto-next-list don't match:"
              ),
                t.console.log(o),
                t.console.log(l);
            else {
              var d = o.indexOf(n.origEvent.key);
              if (0 <= d) {
                var p = l[d];
                if (s(p))
                  return (
                    (n.detail.next = a[p]),
                    void (n.detail.transitionDuration = i.util.toNumber(
                      n.detail.next.dataset.transitionDuration,
                      n.detail.transitionDuration
                    ))
                  );
                var m = e.getElementById(p);
                if (m && m.classList.contains('step'))
                  return (
                    (n.detail.next = m),
                    void (n.detail.transitionDuration = i.util.toNumber(
                      n.detail.next.dataset.transitionDuration,
                      n.detail.transitionDuration
                    ))
                  );
                t.console.log(
                  'impress goto plugin: ' +
                    p +
                    ' is not a step in this impress presentation.'
                );
              }
            }
          }
          if (s(r.gotoNext) && 'next' === n.detail.reason)
            return (
              (n.detail.next = a[r.gotoNext]),
              void (n.detail.transitionDuration = i.util.toNumber(
                n.detail.next.dataset.transitionDuration,
                n.detail.transitionDuration
              ))
            );
          if (r.gotoNext && 'next' === n.detail.reason) {
            var m = e.getElementById(r.gotoNext);
            if (m && m.classList.contains('step'))
              return (
                (n.detail.next = m),
                void (n.detail.transitionDuration = i.util.toNumber(
                  n.detail.next.dataset.transitionDuration,
                  n.detail.transitionDuration
                ))
              );
            t.console.log(
              'impress goto plugin: ' +
                r.gotoNext +
                ' is not a step in this impress presentation.'
            );
          }
          if (s(r.gotoPrev) && 'prev' === n.detail.reason)
            return (
              (n.detail.next = a[r.gotoPrev]),
              void (n.detail.transitionDuration = i.util.toNumber(
                n.detail.next.dataset.transitionDuration,
                n.detail.transitionDuration
              ))
            );
          if (r.gotoPrev && 'prev' === n.detail.reason) {
            var m = e.getElementById(r.gotoPrev);
            if (m && m.classList.contains('step'))
              return (
                (n.detail.next = m),
                void (n.detail.transitionDuration = i.util.toNumber(
                  n.detail.next.dataset.transitionDuration,
                  n.detail.transitionDuration
                ))
              );
            t.console.log(
              'impress goto plugin: ' +
                r.gotoPrev +
                ' is not a step in this impress presentation.'
            );
          }
          if (s(r.goto))
            return (
              (n.detail.next = a[r.goto]),
              void (n.detail.transitionDuration = i.util.toNumber(
                n.detail.next.dataset.transitionDuration,
                n.detail.transitionDuration
              ))
            );
          if (r.goto) {
            var m = e.getElementById(r.goto);
            if (m && m.classList.contains('step'))
              return (
                (n.detail.next = m),
                void (n.detail.transitionDuration = i.util.toNumber(
                  n.detail.next.dataset.transitionDuration,
                  n.detail.transitionDuration
                ))
              );
            t.console.log(
              'impress goto plugin: ' +
                r.goto +
                ' is not a step in this impress presentation.'
            );
          }
        }
      };
    impress.addPreStepLeavePlugin(n);
  })(document, window),
  (function (t, i) {
    'use strict';
    var s,
      n = [],
      r = function (e, i, s) {
        var n = t.createEvent('CustomEvent');
        n.initCustomEvent(i, !0, !0, s), e.dispatchEvent(n);
      },
      a = function () {
        var e = t.getElementById('impress-help');
        if (e) {
          var i = [];
          for (var s in n) for (var r in s) i.push(n[s][r]);
          e.innerHTML = '<table>\n' + i.join('\n') + '</table>\n';
        }
      };
    t.addEventListener('impress:help:add', function (t) {
      var e = t.detail.row;
      ('object' == typeof n[e] && n[e].isArray) || (n[e] = []),
        n[t.detail.row].push(
          '<tr><td><strong>' +
            t.detail.command +
            '</strong></td><td>' +
            t.detail.text +
            '</td></tr>'
        ),
        a();
    }),
      t.addEventListener('impress:init', function (o) {
        a();
        var e = t.getElementById('impress-help');
        if (e) {
          (e.style.display = 'block'),
            (s = i.setTimeout(function () {
              var e = t.getElementById('impress-help');
              e.style.display = 'none';
            }, 7e3));
          var l = o.detail.api;
          l.lib.gc.pushCallback(function () {
            i.clearTimeout(s),
              (e.style.display = ''),
              (e.innerHTML = ''),
              (n = []);
          });
        }
        r(t, 'impress:help:add', {
          command: 'H',
          text: 'Show this help',
          row: 0,
        });
      });
  })(document, window),
  (function (e, t) {
    'use strict';
    var i,
      s = function (t, i, s) {
        var n = e.createEvent('CustomEvent');
        n.initCustomEvent(i, !0, !0, s), t.dispatchEvent(n);
      };
    switch (navigator.language) {
      case 'de':
        i = {
          noNotes: '<div class="noNotes">Keine Notizen hierzu</div>',
          restart: 'Neustart',
          clickToOpen: 'Klicken um Sprecherkonsole zu \xF6ffnen',
          prev: 'zur\xFCck',
          next: 'weiter',
          loading: 'initalisiere',
          ready: 'Bereit',
          moving: 'in Bewegung',
          useAMPM: !1,
        };
        break;
      case 'zh-CN':
      case 'zh-cn':
        i = {
          noNotes:
            '<div class="noNotes">\u5F53\u524D\u5E27\u6CA1\u6709\u5907\u6CE8</div>',
          restart: '\u91CD\u65B0\u5F00\u59CB',
          clickToOpen:
            '\u70B9\u51FB\u4EE5\u6253\u5F00\u6F14\u8BB2\u8005\u63A7\u5236\u754C\u9762',
          prev: '\u4E0A\u4E00\u5E27',
          next: '\u4E0B\u4E00\u5E27',
          loading: '\u52A0\u8F7D\u4E2D',
          ready: '\u5C31\u7EEA',
          moving: '\u79FB\u52A8\u4E2D',
          useAMPM: !1,
        };
        break;
      case 'en':
      default:
        i = {
          noNotes: '<div class="noNotes">No notes for this step</div>',
          restart: 'Restart',
          clickToOpen: 'Click to open speaker console',
          prev: 'Prev',
          next: 'Next',
          loading: 'Loading',
          ready: 'Ready',
          moving: 'Moving',
          useAMPM: !1,
        };
    }
    const n = 0.7,
      r = 0.5,
      a = 4;
    var o = void 0,
      l = void 0,
      d = {},
      p = function (e) {
        return (10 > e ? '0' : '') + e;
      },
      m = (t.impressConsole = function (s) {
        if (((s = s || 'impress'), d[s])) return d[s];
        var m = e.getElementById(s),
          c = null,
          g = function () {
            for (
              var t = '', s = e.querySelector('.active');
              !s.nextElementSibling && s.parentNode;

            )
              s = s.parentNode;
            for (s = s.nextElementSibling; s; ) {
              if (
                ((t = s.attributes['class']),
                t && -1 !== t.value.indexOf('step'))
              )
                return (
                  (c.document.getElementById('blocker').innerHTML = i.next), s
                );
              if (s.firstElementChild) s = s.firstElementChild;
              else {
                for (; !s.nextElementSibling && s.parentNode; )
                  s = s.parentNode;
                s = s.nextElementSibling;
              }
            }
            return (
              (c.document.getElementById('blocker').innerHTML = i.restart),
              e.querySelector('.step')
            );
          },
          v = function () {
            if (c) {
              var t = e.querySelector('.active').querySelector('.notes');
              (t = t ? t.innerHTML : i.noNotes),
                (c.document.getElementById('notes').innerHTML = t);
              var s = e.URL.substring(0, e.URL.search('#/')),
                n = s + '#' + e.querySelector('.active').id,
                r = s + '#' + g().id,
                a = c.document.getElementById('slideView');
              a.src !== n && (a.src = n);
              var o = c.document.getElementById('preView');
              o.src !== r && (o.src = r),
                (c.document.getElementById('status').innerHTML =
                  '<span class="moving">' + i.moving + '</span>');
            }
          },
          y = function () {
            if (c) {
              var t = e.querySelector('.active').querySelector('.notes');
              t = t ? t.innerHTML : i.noNotes;
              var s = c.document.getElementById('notes');
              (s.innerHTML = t), (s.scrollTop = 0);
              var n = e.URL.substring(0, e.URL.search('#/')),
                r = n + '#' + e.querySelector('.active').id,
                a = n + '#' + g().id,
                o = c.document.getElementById('slideView');
              o.src !== r && (o.src = r);
              var l = c.document.getElementById('preView');
              l.src !== a && (l.src = a),
                (c.document.getElementById('status').innerHTML =
                  '<span  class="ready">' + i.ready + '</span>');
            }
          },
          h = function (e) {
            c &&
              ('next' === e.detail.reason && b(),
              'prev' === e.detail.reason && L());
          },
          b = function () {
            var e = c.document.getElementById('slideView');
            E(e, 'impress:substep:show');
          },
          L = function () {
            var e = c.document.getElementById('slideView');
            E(e, 'impress:substep:hide');
          },
          E = function (e, t, i) {
            var s = e.contentDocument.createEvent('CustomEvent');
            s.initCustomEvent(t, !0, !0, i), e.contentDocument.dispatchEvent(s);
          },
          x = function () {
            c.timerStart = new Date();
          },
          f = function () {
            var e = new Date(),
              t = e.getHours(),
              s = e.getMinutes(),
              n = e.getSeconds(),
              r = '';
            i.useAMPM &&
              ((r = 12 > t ? 'AM' : 'PM'),
              (t = 12 < t ? t - 12 : t),
              (t = 0 === t ? 12 : t));
            var a = p(t) + ':' + p(s) + ':' + p(n) + ' ' + r;
            (c.document.getElementById('clock').firstChild.nodeValue = a),
              (n = Math.floor((e - c.timerStart) / 1e3)),
              (s = Math.floor(n / 60)),
              (n = Math.floor(n % 60)),
              (c.document.getElementById('timer').firstChild.nodeValue =
                p(s) + 'm ' + p(n) + 's'),
              c.initialized ||
                (c.document
                  .getElementById('slideView')
                  .contentWindow.scrollTo(0, 0),
                c.document
                  .getElementById('preView')
                  .contentWindow.scrollTo(0, 0),
                (c.initialized = !0));
          },
          w = function (e, t, i) {
            void 0 === i && (i = c),
              i.document.addEventListener(
                'keydown',
                function (t) {
                  t.ctrlKey ||
                    t.altKey ||
                    t.shiftKey ||
                    t.metaKey ||
                    -1 === e.indexOf(t.keyCode) ||
                    t.preventDefault();
                },
                !1
              ),
              i.document.addEventListener(
                'keyup',
                function (i) {
                  i.ctrlKey ||
                    i.altKey ||
                    i.shiftKey ||
                    i.metaKey ||
                    -1 === e.indexOf(i.keyCode) ||
                    (t(), i.preventDefault());
                },
                !1
              );
          },
          S = function () {
            var e = c.document.getElementById('slideView'),
              t = c.document.getElementById('preView');
            e.contentDocument.body.classList.add('impress-console'),
              t.contentDocument.body.classList.add('impress-console'),
              void 0 !== l &&
                (e.contentDocument.head.insertAdjacentHTML(
                  'beforeend',
                  '<link rel="stylesheet" type="text/css" href="' + l + '">'
                ),
                t.contentDocument.head.insertAdjacentHTML(
                  'beforeend',
                  '<link rel="stylesheet" type="text/css" href="' + l + '">'
                )),
              e.addEventListener('load', function () {
                e.contentDocument.body.classList.add('impress-console'),
                  void 0 !== l &&
                    e.contentDocument.head.insertAdjacentHTML(
                      'beforeend',
                      '<link rel="stylesheet" type="text/css" href="' + l + '">'
                    );
              }),
              t.addEventListener('load', function () {
                t.contentDocument.body.classList.add('impress-console'),
                  void 0 !== l &&
                    t.contentDocument.head.insertAdjacentHTML(
                      'beforeend',
                      '<link rel="stylesheet" type="text/css" href="' + l + '">'
                    );
              });
          },
          C = function () {
            if (!top.isconsoleWindow)
              if (c && !c.closed) c.focus();
              else {
                if (((c = t.open('', 'impressConsole')), null == c)) {
                  var n = e.createElement('div');
                  (n.id = 'impress-console-button'),
                    (n.style.position = 'fixed'),
                    (n.style.left = 0),
                    (n.style.top = 0),
                    (n.style.right = 0),
                    (n.style.bottom = 0),
                    (n.style.backgroundColor = 'rgba(255, 255, 255, 0.9)');
                  var r =
                    "var x = document.getElementById('impress-console-button');x.parentNode.removeChild(x);var r = document.getElementById('" +
                    s +
                    "');impress('" +
                    s +
                    "').lib.util.triggerEvent(r, 'impress:console:open', {})";
                  return (
                    (n.innerHTML =
                      '<button style="margin: 25vh 25vw;width:50vw;height:50vh;" onclick="' +
                      r +
                      '">' +
                      i.clickToOpen +
                      '</button>'),
                    void e.body.appendChild(n)
                  );
                }
                var a = '';
                return (
                  void 0 !== o &&
                    (a =
                      '<link rel="stylesheet" type="text/css" media="screen" href="' +
                      o +
                      '">'),
                  c.document.open(),
                  c.document.write(
                    '<!DOCTYPE html><html id="impressconsole"><head>{{cssStyle}}{{cssLink}}</head><body><div id="console"><div id="views"><iframe id="slideView" scrolling="no"></iframe><iframe id="preView" scrolling="no"></iframe><div id="blocker"></div></div><div id="notes"></div></div><div id="controls"> <div id="prev"><a  href="#" onclick="impress().prev(); return false;" />{{prev}}</a></div><div id="next"><a  href="#" onclick="impress().next(); return false;" />{{next}}</a></div><div id="clock">--:--</div><div id="timer" onclick="timerReset()">00m 00s</div><div id="status">{{loading}}</div></div></body></html>'
                      .replace('{{cssStyle}}', u())
                      .replace('{{cssLink}}', a)
                      .replace(/{{.*?}}/gi, function (e) {
                        return i[e.substring(2, e.length - 2)];
                      })
                  ),
                  (c.document.title = 'Speaker Console (' + e.title + ')'),
                  (c.impress = t.impress),
                  (c.isconsoleWindow = !0),
                  (c.onload = S),
                  (c.timerStart = new Date()),
                  (c.timerReset = x),
                  (c.clockInterval = setInterval(d[s].clockTick, 1e3)),
                  (c.onbeforeunload = function () {
                    clearInterval(c.clockInterval);
                  }),
                  y(),
                  (c.initialized = !1),
                  c.document.close(),
                  (t.onresize = I),
                  (c.onresize = I),
                  c
                );
              }
          },
          I = function () {
            setTimeout(() => {
              var e = c.document.getElementById('slideView'),
                i = c.document.getElementById('preView'),
                s = t.innerHeight / t.innerWidth,
                o = c.document.getElementById('views'),
                l = e.offsetWidth - e.clientWidth,
                d = o.clientWidth - l,
                p = Math.floor(d * s),
                m = p + a,
                u = Math.floor(d * n),
                g = Math.floor(p * n);
              o.clientHeight - l < m + g &&
                ((g = o.clientHeight - l - m), (u = Math.floor(g / s))),
                u <= Math.floor(d * r) &&
                  ((d = o.clientWidth - l),
                  (p = Math.floor((o.clientHeight - l - a) / (1 + r))),
                  (m = p + a),
                  (u = Math.floor(d * r)),
                  (g = o.clientHeight - l - m)),
                (e.style.width = d + 'px'),
                (e.style.height = p + 'px'),
                (i.style.top = m + 'px'),
                (i.style.width = u + 'px'),
                (i.style.height = g + 'px');
            }, 500);
          },
          k = function (e, i) {
            void 0 === e
              ? void 0 !== m.dataset.consoleCss && (o = m.dataset.consoleCss)
              : (o = e),
              void 0 === i
                ? void 0 !== m.dataset.consoleCssIframe &&
                  (l = m.dataset.consoleCssIframe)
                : (l = i),
              m.addEventListener('impress:stepleave', v),
              m.addEventListener('impress:stepenter', y),
              m.addEventListener('impress:substep:stepleaveaborted', h),
              m.addEventListener('impress:substep:show', b),
              m.addEventListener('impress:substep:hide', L),
              (t.onunload = function () {
                c && !c.closed && c.close();
              }),
              'true' === m.dataset.consoleAutolaunch && C();
          };
        return (
          m.addEventListener('impress:console:open', function () {
            C();
          }),
          m.addEventListener('impress:console:registerKeyEvent', function (e) {
            w(e.detail.keyCodes, e.detail.handler, e.detail.window);
          }),
          (d[s] = {
            init: function (e, i) {
              (void 0 === e || 'css/impressConsole.css' === e) &&
                (void 0 === i || i === 'css/iframe.css') &&
                t.console.log(
                  'impressConsole().init() is deprecated. impressConsole is now initialized automatically when you call impress().init().'
                ),
                k(e, i);
            },
            open: C,
            clockTick: f,
            registerKeyEvent: w,
            _init: k,
          }),
          d[s]
        );
      });
    e.addEventListener('impress:init', function (t) {
      m(t.target.id)._init(),
        s(e, 'impress:help:add', {
          command: 'P',
          text: 'Presenter console',
          row: 10,
        });
    });
    var u = function () {
      return `<style>
            #impressconsole body {
                background-color: rgb(255, 255, 255);
                padding: 0;
                margin: 0;
                font-family: verdana, arial, sans-serif;
                font-size: 2vw;
            }

            #impressconsole div#console {
                position: absolute;
                top: 0.5vw;
                left: 0.5vw;
                right: 0.5vw;
                bottom: 3vw;
                margin: 0;
            }

            #impressconsole div#views, #impressconsole div#notes {
                position: absolute;
                top: 0;
                bottom: 0;
            }

            #impressconsole div#views {
                left: 0;
                right: 50vw;
                overflow: hidden;
            }

            #impressconsole div#blocker {
                position: absolute;
                right: 0;
                bottom: 0;
            }

            #impressconsole div#notes {
                left: 50vw;
                right: 0;
                overflow-x: hidden;
                overflow-y: auto;
                padding: 0.3ex;
                background-color: rgb(255, 255, 255);
                border: solid 1px rgb(120, 120, 120);
            }

            #impressconsole div#notes .noNotes {
                color: rgb(200, 200, 200);
            }

            #impressconsole div#notes p {
                margin-top: 0;
            }

            #impressconsole iframe {
                position: absolute;
                margin: 0;
                padding: 0;
                left: 0;
                border: solid 1px rgb(120, 120, 120);
            }

            #impressconsole iframe#slideView {
                top: 0;
                width: 49vw;
                height: 49vh;
            }

            #impressconsole iframe#preView {
                opacity: 0.7;
                top: 50vh;
                width: 30vw;
                height: 30vh;
            }

            #impressconsole div#controls {
                margin: 0;
                position: absolute;
                bottom: 0.25vw;
                left: 0.5vw;
                right: 0.5vw;
                height: 2.5vw;
                background-color: rgb(255, 255, 255);
                background-color: rgba(255, 255, 255, 0.6);
            }

            #impressconsole div#prev, div#next {
            }

            #impressconsole div#prev a, #impressconsole div#next a {
                display: block;
                border: solid 1px rgb(70, 70, 70);
                border-radius: 0.5vw;
                font-size: 1.5vw;
                padding: 0.25vw;
                text-decoration: none;
                background-color: rgb(220, 220, 220);
                color: rgb(0, 0, 0);
            }

            #impressconsole div#prev a:hover, #impressconsole div#next a:hover {
                background-color: rgb(245, 245, 245);
            }

            #impressconsole div#prev {
                float: left;
            }

            #impressconsole div#next {
                float: right;
            }

            #impressconsole div#status {
                margin-left: 2em;
                margin-right: 2em;
                text-align: center;
                float: right;
            }

            #impressconsole div#clock {
                margin-left: 2em;
                margin-right: 2em;
                text-align: center;
                float: left;
            }

            #impressconsole div#timer {
                margin-left: 2em;
                margin-right: 2em;
                text-align: center;
                float: left;
            }

            #impressconsole span.moving {
                color: rgb(255, 0, 0);
            }

            #impressconsole span.ready {
                color: rgb(0, 128, 0);
            }
        </style>`;
    };
  })(document, window),
  (function (e, t) {
    'use strict';
    var s, n, r, a;
    a = [];
    var o, l, d, p, m, u, c, g, v, y, h;
    e.addEventListener(
      'impress:init',
      function (e) {
        (s = e.target),
          (n = e.detail.api),
          (r = n.lib.gc),
          l(),
          r.pushCallback(h);
      },
      !1
    ),
      (h = function () {
        var e, t;
        for (d(), t = 0; t < a.length; t += 1)
          (e = a[t]), e.node.removeAttribute(e.attr);
        a = [];
      }),
      (y = function (e, t) {
        var s, n, r, a;
        for (s = 'data-media-' + e, r = 0; r < t.length; r += 1)
          if (((a = t[r]), a.hasAttribute(s)))
            return (n = a.getAttribute(s)), '' === n || 'true' === n;
      }),
      (c = function (t) {
        var i = t.target.nodeName.toLowerCase();
        e.body.classList.add('impress-media-' + i + '-playing'),
          e.body.classList.remove('impress-media-' + i + '-paused');
      }),
      (g = function (t) {
        var i = t.target.nodeName.toLowerCase();
        e.body.classList.add('impress-media-' + i + '-paused'),
          e.body.classList.remove('impress-media-' + i + '-playing');
      }),
      (v = function (t) {
        var i = t.target.nodeName.toLowerCase();
        e.body.classList.remove('impress-media-' + i + '-playing'),
          e.body.classList.remove('impress-media-' + i + '-paused');
      }),
      (d = function () {
        var t, i;
        for (t in ((i = ['video', 'audio']), i))
          e.body.classList.remove('impress-media-' + i[t] + '-playing'),
            e.body.classList.remove('impress-media-' + i[t] + '-paused');
      }),
      (o = function () {
        var e, t, n, o, l;
        for (
          n = s.querySelectorAll('audio, video'), e = 0;
          e < n.length;
          e += 1
        )
          (l = n[e].nodeName.toLowerCase()),
            (o = n[e]),
            (t = o.getAttribute('id')),
            (void 0 === t || null === t) &&
              (o.setAttribute('id', 'media-' + l + '-' + e),
              a.push({ node: o, attr: 'id' })),
            r.addEventListener(o, 'play', c),
            r.addEventListener(o, 'playing', c),
            r.addEventListener(o, 'pause', g),
            r.addEventListener(o, 'ended', v);
      }),
      (l = function () {
        var t, s, n;
        for (
          o(), t = e.getElementsByClassName('step'), n = 0;
          n < t.length;
          n += 1
        )
          (s = t[n]),
            r.addEventListener(s, 'impress:stepenter', m),
            r.addEventListener(s, 'impress:stepleave', u);
      }),
      (p = function () {
        return {
          preview: null !== t.frameElement && 'preView' === t.frameElement.id,
          slideView:
            null !== t.frameElement && 'slideView' === t.frameElement.id,
        };
      }),
      (m = function (e) {
        var t, n, r, a, o, l;
        if (e && e.target)
          for (
            t = e.target, d(), n = t.querySelectorAll('audio, video'), a = 0;
            a < n.length;
            a += 1
          )
            (r = n[a]),
              (o = p()),
              (l = y('autoplay', [r, t, s])),
              l && !o.preview && (o.slideView && (r.muted = !0), r.play());
      }),
      (u = function (e) {
        var t, n, r, a, o, l, p;
        if (e && e.target) {
          for (
            t = e.target, n = e.target.querySelectorAll('audio, video'), r = 0;
            r < n.length;
            r += 1
          )
            (a = n[r]),
              (o = y('autoplay', [a, t, s])),
              (l = y('autopause', [a, t, s])),
              (p = y('autostop', [a, t, s])),
              void 0 === p && void 0 === l && (p = o),
              (l || p) && (a.pause(), p && (a.currentTime = 0));
          d();
        }
      });
  })(document, window),
  (function (e) {
    'use strict';
    var t = function (t) {
        for (var s = e.querySelectorAll('.step'), n = 0; n < s.length; n++)
          if (s[n] === t) return n + 1 < s.length ? s[n + 1] : s[0];
      },
      i = function (t) {
        for (var s = e.querySelectorAll('.step'), n = s.length - 1; 0 <= n; n--)
          if (s[n] === t) return 0 <= n - 1 ? s[n - 1] : s[s.length - 1];
      };
    e.addEventListener('impress:init', function (t) {
      var i = e.body;
      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        navigator.userAgent
      ) && i.classList.add('impress-mobile');
      var s = t.detail.api;
      s.lib.gc.pushCallback(function () {
        e.body.classList.remove('impress-mobile');
        var t = e.getElementsByClassName('prev')[0],
          i = e.getElementsByClassName('next')[0];
        'undefined' != typeof t && t.classList.remove('prev'),
          'undefined' != typeof i && i.classList.remove('next');
      });
    }),
      e.addEventListener('impress:stepenter', function (s) {
        var n = e.getElementsByClassName('prev')[0],
          r = e.getElementsByClassName('next')[0],
          a = i(s.target);
        a.classList.add('prev');
        var o = t(s.target);
        o.classList.add('next'),
          'undefined' != typeof n && n.classList.remove('prev'),
          'undefined' != typeof r && r.classList.remove('next');
      });
  })(document),
  (function (e, t) {
    'use strict';
    var i,
      s = function () {
        e.body.classList.add('impress-mouse-timeout');
      },
      n = function () {
        i && t.clearTimeout(i),
          e.body.classList.remove('impress-mouse-timeout'),
          (i = t.setTimeout(s, 3000));
      };
    e.addEventListener(
      'impress:init',
      function (s) {
        var r = s.detail.api,
          a = r.lib.gc;
        a.addEventListener(e, 'mousemove', n),
          a.addEventListener(e, 'click', n),
          a.addEventListener(e, 'touch', n),
          n(),
          a.pushCallback(function () {
            t.clearTimeout(i), e.body.classList.remove('impress-mouse-timeout');
          });
      },
      !1
    );
  })(document, window),
  (function (e) {
    'use strict';
    e.addEventListener(
      'impress:init',
      function (t) {
        var i = t.detail.api,
          s = i.lib.gc,
          n = i.lib.util,
          r = function (e) {
            return (
              !(e.altKey || e.ctrlKey || e.metaKey) &&
              (!(9 !== e.keyCode) || (!e.shiftKey && void 0))
            );
          };
        s.addEventListener(
          e,
          'keydown',
          function (e) {
            r(e) && e.preventDefault();
          },
          !1
        ),
          s.addEventListener(
            e,
            'click',
            function (t) {
              var s = t.target;
              try {
                for (; s && 'A' !== s?.tagName && s !== e.documentElement; )
                  s = s.parentNode;
                if (s && 'A' === s?.tagName) {
                  var n = s.getAttribute('href');
                  n && '#' === n[0] && (s = e.getElementById(n.slice(1)));
                }
                i.goto(s) && (t.stopImmediatePropagation(), t.preventDefault());
              } catch (e) {
                if (e instanceof TypeError && 'target is null' === e.message)
                  return;
                throw e;
              }
            },
            !1
          ),
          n.triggerEvent(e, 'impress:help:add', {
            command: 'Left &amp; Right',
            text: 'Previous &amp; Next step',
            row: 1,
          });
      },
      !1
    );
  })(document),
  (function (e) {
    'use strict';
    var t,
      i,
      s,
      n,
      r,
      a,
      o,
      l = [],
      d = function (t, i, s) {
        var n = e.createEvent('CustomEvent');
        n.initCustomEvent(i, !0, !0, s), t.dispatchEvent(n);
      },
      p = function (t) {
        var i = e.createElement('div');
        return (i.innerHTML = t), i.firstChild;
      },
      m = function () {
        for (var e = '', t = 0; t < n.length; t++)
          0 > l.indexOf(n[t]) &&
            (e =
              e + '<option value="' + n[t].id + '">' + n[t].id + '</option>\n');
        return e;
      },
      u = function (e) {
        i = e.detail.api;
        var l = i.lib.gc;
        (s = e.target), (n = s.querySelectorAll('.step'));
        var u =
          '<select id="impress-navigation-ui-select" title="Go to" class="impress-navigation-ui">\n' +
          m() +
          '</select>';
        (r = p(
          '<button id="impress-navigation-ui-prev" title="Previous" class="impress-navigation-ui">&lt;</button>'
        )),
          (a = p(u)),
          a.addEventListener('change', function (e) {
            i.goto(e.target.value);
          }),
          l.addEventListener(s, 'impress:steprefresh', function (e) {
            (n = s.querySelectorAll('.step')),
              (a.innerHTML = '\n' + m()),
              (a.value = e.target.id);
          }),
          (o = p(
            '<button id="impress-navigation-ui-next" title="Next" class="impress-navigation-ui">&gt;</button>'
          )),
          o.addEventListener('click', function () {
            i.next();
          }),
          d(t, 'impress:toolbar:appendChild', { group: 0, element: r }),
          d(t, 'impress:toolbar:appendChild', { group: 0, element: a }),
          d(t, 'impress:toolbar:appendChild', { group: 0, element: o });
      };
    e.addEventListener(
      'impress:navigation-ui:hideStep',
      function (e) {
        l.push(e.target), a && (a.innerHTML = m());
      },
      !1
    ),
      e.addEventListener(
        'impress:init',
        function (i) {
          (t = e.querySelector('#impress-toolbar')), t && u(i);
        },
        !1
      );
  })(document),
  (function (e) {
    'use strict';
    function t(e) {
      var t = n.indexOf(e);
      if (null !== a) {
        var i = (100 / (n.length - 1)) * t;
        a.style.width = i.toFixed(2) + '%';
      }
      null !== o && (o.innerHTML = t + '/' + (n.length - 1));
    }
    var s,
      n = [],
      r = function () {
        n = [];
        for (var e = s.querySelectorAll('.step'), t = 0; t < e.length; t++)
          n[t + 1] = e[t].id;
      };
    e.addEventListener('impress:init', function (e) {
      (s = e.target), r();
      var t = e.detail.api.lib.gc;
      t.pushCallback(function () {
        (n = []), a && (a.style.width = ''), o && (o.innerHTML = '');
      });
    });
    var a = e.querySelector('div.impress-progressbar div'),
      o = e.querySelector('div.impress-progress');
    (null !== a || null !== o) &&
      (e.addEventListener('impress:stepleave', function (e) {
        t(e.detail.next.id);
      }),
      e.addEventListener('impress:steprefresh', function (e) {
        r(), t(e.target.id);
      }));
  })(document),
  (function (e, t) {
    'use strict';
    var s = {},
      n = function (e, t) {
        return isNaN(e) ? t || 0 : +e;
      },
      r = function (e, i) {
        if ('string' != typeof e) return n(e, i);
        var s = e.match(/^([+-]*[\d\.]+)([wh])$/);
        if (null == s) return n(e, i);
        var r = parseFloat(s[1]),
          a = 'w' === s[2] ? t.innerWidth : t.innerHeight;
        return r * a;
      },
      a = function (i, s) {
        var a = i.dataset;
        if (
          (s || (s = { x: 0, y: 0, z: 0, relative: { x: 0, y: 0, z: 0 } }),
          a.relTo)
        ) {
          var o = e.getElementById(a.relTo);
          o
            ? i.compareDocumentPosition(o) & Node.DOCUMENT_POSITION_PRECEDING
              ? ((s.x = n(o.getAttribute('data-x'))),
                (s.y = n(o.getAttribute('data-y'))),
                (s.z = n(o.getAttribute('data-z'))),
                (s.relative = {}))
              : t.console.error(
                  'impress.js rel plugin: Step "' +
                    a.relTo +
                    '" is not defined *before* the current step. Referencing is limited to previously defined steps. Please check your markup. Ignoring data-rel-to attribute of this step. Have a look at the documentation for how to create relative positioning to later shown steps with the help of the goto plugin.'
                )
            : t.console.warn(
                'impress.js rel plugin: "' +
                  a.relTo +
                  '" is not a valid step in this impress.js presentation. Please check your markup. Ignoring data-rel-to attribute of this step.'
              );
        }
        var l = {
          x: n(a.x, s.x),
          y: n(a.y, s.y),
          z: n(a.z, s.z),
          relative: {
            x: r(a.relX, s.relative.x),
            y: r(a.relY, s.relative.y),
            z: r(a.relZ, s.relative.z),
          },
        };
        return (
          void 0 !== a.x && (l.relative.x = 0),
          void 0 !== a.y && (l.relative.y = 0),
          void 0 !== a.z && (l.relative.z = 0),
          (l.x += l.relative.x),
          (l.y += l.relative.y),
          (l.z += l.relative.z),
          l
        );
      };
    t.impress.addPreInitPlugin(function (e) {
      var t,
        n = e.querySelectorAll('.step');
      s[e.id] = [];
      for (var r, o = 0; o < n.length; o++) {
        (r = n[o]),
          s[e.id].push({
            el: r,
            x: r.getAttribute('data-x'),
            y: r.getAttribute('data-y'),
            z: r.getAttribute('data-z'),
            relX: r.getAttribute('data-rel-x'),
            relY: r.getAttribute('data-rel-y'),
            relZ: r.getAttribute('data-rel-z'),
          });
        var l = a(r, t);
        r.setAttribute('data-x', l.x),
          r.setAttribute('data-y', l.y),
          r.setAttribute('data-z', l.z),
          (t = l);
      }
    }),
      e.addEventListener(
        'impress:init',
        function (e) {
          var t = e.target;
          e.detail.api.lib.gc.pushCallback(function () {
            for (var e, i = s[t.id]; (e = i.pop()); )
              null !== e.relX &&
                (null === e.x
                  ? e.el.removeAttribute('data-x')
                  : e.el.setAttribute('data-x', e.x)),
                null !== e.relY &&
                  (null === e.y
                    ? e.el.removeAttribute('data-y')
                    : e.el.setAttribute('data-y', e.y)),
                null !== e.relZ &&
                  (null === e.z
                    ? e.el.removeAttribute('data-z')
                    : e.el.setAttribute('data-z', e.z));
            delete s[t.id];
          });
        },
        !1
      );
  })(document, window),
  (function (e, t) {
    'use strict';
    e.addEventListener(
      'impress:init',
      function (i) {
        var s = i.detail.api;
        s.lib.gc.addEventListener(
          t,
          'resize',
          s.lib.util.throttle(function () {
            s.goto(e.querySelector('.step.active'), 500);
          }, 500),
          !1
        );
      },
      !1
    );
  })(document, window),
  (function (e, t) {
    'use strict';
    var i;
    e.addEventListener(
      'impress:init',
      function (e) {
        i = e.detail.api.lib.util;
      },
      !1
    );
    var s = function (t) {
        for (var s = e.querySelectorAll('.step'), n = 0; n < s.length; n++)
          if (s[n] === t) return n + 1 < s.length ? s[n + 1] : s[0];
      },
      n = function (t) {
        for (var s = e.querySelectorAll('.step'), n = s.length - 1; 0 <= n; n--)
          if (s[n] === t) return 0 <= n - 1 ? s[n - 1] : s[s.length - 1];
      },
      r = function (e) {
        e &&
          e.target &&
          (!e.detail.next.classList.contains('skip') ||
            ('next' === e.detail.reason
              ? ((e.detail.next = s(e.detail.next)), r(e))
              : 'prev' === e.detail.reason &&
                ((e.detail.next = n(e.detail.next)), r(e)),
            (e.detail.transitionDuration = i.toNumber(
              e.detail.next.dataset.transitionDuration,
              e.detail.transitionDuration
            ))));
      };
    t.impress.addPreStepLeavePlugin(r, 1);
  })(document, window),
  (function (e, t) {
    'use strict';
    t.impress.addPreStepLeavePlugin(function (e) {
      return e && e.target
        ? !(
            e.target.classList.contains('stop') && 'next' === e.detail.reason
          ) && void 0
        : void 0;
    }, 2);
  })(document, window),
  (function (e, t) {
    'use strict';
    var i = function (t, i, s) {
        var n = e.createEvent('CustomEvent');
        n.initCustomEvent(i, !0, !0, s), t.dispatchEvent(n);
      },
      s = null;
    e.addEventListener(
      'impress:stepenter',
      function (e) {
        s = e.target;
      },
      !1
    );
    var n = function (e) {
        var t = e.querySelectorAll('.substep');
        if (0 < t.length) {
          var i = r(t),
            s = e.querySelectorAll('.substep-visible');
          return a(i, s);
        }
      },
      r = function (e) {
        var t = Array.from(e),
          i = t
            .filter((e) => e.dataset.substepOrder)
            .sort((e, t) => {
              var i = e.dataset.substepOrder,
                s = t.dataset.substepOrder;
              return parseInt(i) - parseInt(s);
            })
            .concat(t.filter((e) => void 0 === e.dataset.substepOrder));
        return i;
      },
      a = function (e, t) {
        if (t.length < e.length) {
          for (var s = 0; s < e.length; s++)
            e[s].classList.remove('substep-active');
          var n = e[t.length];
          return (
            n.classList.add('substep-visible'),
            n.classList.add('substep-active'),
            n
          );
        }
      },
      o = function (e) {
        var t = e.querySelectorAll('.substep'),
          i = e.querySelectorAll('.substep-visible'),
          s = r(i);
        if (0 < t.length) return l(s);
      },
      l = function (e) {
        if (0 < e.length) {
          for (var t = -1, s = 0; s < e.length; s++)
            e[s].classList.contains('substep-active') && (t = s),
              e[s].classList.remove('substep-active');
          0 < t && e[t - 1].classList.add('substep-active');
          var n = e[e.length - 1];
          return n.classList.remove('substep-visible'), n;
        }
      };
    t.impress.addPreStepLeavePlugin(function (e) {
      if (e && e.target) {
        var t,
          s = e.target;
        return 'next' === e.detail.reason && ((t = n(s)), t)
          ? (i(s, 'impress:substep:stepleaveaborted', {
              reason: 'next',
              substep: t,
            }),
            i(s, 'impress:substep:enter', { reason: 'next', substep: t }),
            !1)
          : 'prev' === e.detail.reason && ((t = o(s)), t)
          ? (i(s, 'impress:substep:stepleaveaborted', {
              reason: 'prev',
              substep: t,
            }),
            i(s, 'impress:substep:leave', { reason: 'prev', substep: t }),
            !1)
          : void 0;
      }
    }, 1),
      e.addEventListener(
        'impress:stepenter',
        function (e) {
          for (
            var t = e.target, s = t.querySelectorAll('.substep-visible'), n = 0;
            n < s.length;
            n++
          )
            s[n].classList.remove('substep-visible');
        },
        !1
      ),
      e.addEventListener(
        'impress:substep:show',
        function () {
          n(s);
        },
        !1
      ),
      e.addEventListener(
        'impress:substep:hide',
        function () {
          o(s);
        },
        !1
      );
  })(document, window),
  (function (e) {
    'use strict';
    var t = e.getElementById('impress-toolbar'),
      s = [],
      n = function (i) {
        if (!s[i]) {
          (s[i] = e.createElement('span')),
            (s[i].id = 'impress-toolbar-group-' + i);
          var n = r(i);
          n === void 0 ? t.appendChild(s[i]) : t.insertBefore(s[i], s[n]);
        }
        return s[i];
      },
      r = function (e) {
        for (var t = e + 1; !s[t] && t < s.length; ) t++;
        if (t < s.length) return t;
      };
    t &&
      (t.addEventListener('impress:toolbar:appendChild', function (t) {
        var e = n(t.detail.group);
        e.appendChild(t.detail.element);
      }),
      t.addEventListener('impress:toolbar:insertBefore', function (i) {
        t.insertBefore(i.detail.element, i.detail.before);
      }),
      t.addEventListener('impress:toolbar:removeWidget', function (i) {
        t.removeChild(i.detail.remove);
      }),
      e.addEventListener('impress:init', function (e) {
        var i = e.detail.api;
        i.lib.gc.pushCallback(function () {
          (t.innerHTML = ''), (s = []);
        });
      }));
  })(document);
